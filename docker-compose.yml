version: '3'

services:
  api:
    build: ./api
    image: api:latest
    container_name: api
    environment:
      PORT: 80
      DB_PORT: 5432
      DB_HOST: db
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      REDIS_HOST: redis
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE_TIME: ${JWT_EXPIRE_TIME}
      MEDIA_SERVER_ENDPOINT: http://media:80
    command: sh -c "
        ./wait-for -t 60 db:5432
        && ./wait-for -t 60 media:80
        && npm run migration:run
        && npm start"
    volumes:
      - "./log:/app/.log"

  live:
    build: ./live
    image: live:latest
    container_name: live
    environment:
      HTTP_PORT: 80
      RTMP_PORT: 1935
      API_SERVER_ENDPOINT: http://api:80
      MEDIA_SERVER_ENDPOINT: http://media:80
      HLS_TIME: ${HLS_TIME}
    command: sh -c "
        ./wait-for -t 60 media:80
        && ./wait-for -t 60 api:80
        && npm start"

  media:
    build: ./media
    image: media:latest
    container_name: media
    environment:
      API_SERVER_ENDPOINT: http://api:80
      PORT: 80
    volumes:
      - "mediadata:/app/static"
    deploy:
      resources:
        limits:
          cpus: '0.5'

  chat:
    build: ./chat
    image: chat:latest
    container_name: chat
    environment:
      PORT: 80
      JWT_SECRET: ${JWT_SECRET}
      MAX_MESSAGES_LENGTH: 30
      REDIS_HOST: redis

  redis:
    image: redis:latest
    container_name: redis
    command:
      - 'redis-server'
      - '--save 60 1'
      - '--loglevel warning'
    volumes:
      - "redisdata:/var/lib/redis"

  db:
    image: postgres:alpine
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: 'GMT'
      PGTZ: 'GMT'
    volumes:
      - "dbdata:/var/lib/postgresql/data"

  server:
    image: nginx:alpine
    container_name: server
    ports:
      - "8080:80"
      - "1935:1935"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"

volumes:
  dbdata:
  mediadata:
  redisdata:
