version: '3'

services:
  api:
    build: ./api
    image: api:latest
    container_name: api
    environment:
      PORT: 80
      DB_PORT: 5432
      DB_HOST: db
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE_TIME: ${JWT_EXPIRE_TIME}
      STATIC_SERVER_ENDPOINT: http://static:80
      NODE_ENV: production
    command: sh -c "
        ./wait-for -t 60 db:5432
        && ./wait-for -t 60 static:80
        && npm start"
    volumes:
      - "./log:/app/.log"

  static:
    build: ./static
    image: static:latest
    container_name: static
    environment:
      PORT: 80
    volumes:
      - "mediadata:/app/static"

  db:
    image: postgres:alpine
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - "dbdata:/var/lib/postgresql/data"

  server:
    image: nginx:alpine
    container_name: server
    ports:
      - "8080:80"
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf"

volumes:
  dbdata:
  mediadata:
